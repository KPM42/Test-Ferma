
ll mul(ll a, ll b, ll mod) // умножение чисел, чтобы не было переполнения 
{
	if (b == 1)
		return a;
	
	if (b % 2 == 0)
	{
		ll t = mul(a, b / 2, mod);
		return (2 * t)%mod;
	}
	return (mul(a, b - 1, mod) + a) % mod;
}

ll bin_pow(ll x, ll n, ll mod) //бинарное возведение в степень 
{
	ll p = 1;
	while (n > 0)
	{
		if (n % 2 != 0)
		{
			p = mul(p, x, mod);
			n--;
		}
		n /= 2;
		x = mul(x, x, mod);
	}
	return p%mod;

}

ll gcd(ll a, ll b)
{
	return (b == 0 ? a : gcd(b, a%b));
}

int attempts = 1000;

bool ferma(ll p) // проверяем на простоту по малой теореме ферма
{
	if (p == 2)
		return true;
	
	srand(time(nullptr));

	for (int i = 0; i <attempts; i++) // attempts - кол-во попыток, так как тест - вероятностный 
	{
		ll a = rand() % (p - 2) + 2;
		
		if (gcd(a, p) != 1) // если числа не взаимно просты, то понятно, что p не простое 
			return false;
		
		if (bin_pow(a, p-1,p) != 1) // a^(p-1) = 1 (mod p)
			return false;
	}

	return true;
}
